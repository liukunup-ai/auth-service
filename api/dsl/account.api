syntax = "v1"

type (
	// 获取验证码
	CaptchaResp {
		CaptchaID    string `json:"captchaId"`
		CaptchaImage string `json:"captchaImage"` // base64 编码过的验证码图片
		ExpiresIn    int64  `json:"expiresIn"`    // 验证码有效期（秒）
	}

	// 注册
	RegisterReq {
		Username      string `json:"username" validate:"required,min=3,max=20"`
		Password      string `json:"password" validate:"required,min=6,max=30"`
		Email         string `json:"email" validate:"required,email"`
		Phone         string `json:"phone,optional" validate:"omitempty,phone"`
		Nickname      string `json:"nickname,optional"`
		CaptchaID     string `json:"captchaId,optional"`
		CaptchaAnswer string `json:"captchaAnswer,optional"`
	}
	RegisterResp {
		UserID    string `json:"userId"`
		Username  string `json:"username"`
		Email     string `json:"email"`
		CreatedAt int64  `json:"createdAt"`
	}

	// 登录
	LoginReq {
		Username      string `json:"username" validate:"required"` // 用户名 (或 邮箱/手机号)
		Password      string `json:"password" validate:"required"` // 密码
		CaptchaID     string `json:"captchaId,optional"`           // 验证码ID (从获取验证码接口取得)
		CaptchaAnswer string `json:"captchaAnswer,optional"`       // 用户实际填写的验证码
	}
	LoginResp {
		UserID           string `json:"userId"`         // 对外返回 Public ID 作为用户标识
		Username         string `json:"username"`       // 用户名
		Email            string `json:"email,optional"` // 邮箱
		AccessToken      string `json:"accessToken"`      // 访问令牌
		AccessExpiresAt  int64  `json:"accessExpiresAt"`  // 访问令牌的过期时间（Unix 时间戳，单位：秒）
		RefreshToken     string `json:"refreshToken"`     // 刷新令牌
		RefreshExpiresAt int64  `json:"refreshExpiresAt"` // 刷新令牌的过期时间（Unix 时间戳，单位：秒）
		TokenType        string `json:"tokenType" default:"Bearer"` // 令牌类型
	}

	// 登出
	LogoutReq {
		AccessToken  string `json:"accessToken,optional"`
		RefreshToken string `json:"refreshToken,optional"`
	}

	// 刷新令牌
	RefreshReq {
		RefreshToken string `json:"refreshToken" validate:"required"`
	}
	RefreshResp {
		AccessToken      string `json:"accessToken"`      // 访问令牌
		AccessExpiresAt  int64  `json:"accessExpiresAt"`  // 访问令牌的过期时间（Unix 时间戳，单位：秒）
		RefreshToken     string `json:"refreshToken"`     // 刷新令牌
		RefreshExpiresAt int64  `json:"refreshExpiresAt"` // 刷新令牌的过期时间（Unix 时间戳，单位：秒）
		TokenType        string `json:"tokenType" default:"Bearer"` // 令牌类型
	}

	// 重置密码
	ResetPasswordReq {
		Email         string `json:"email" validate:"required,email"`
		CaptchaID     string `json:"captchaId,optional"`
		CaptchaAnswer string `json:"captchaAnswer,optional"`
	}

	// 密码重置确认请求
	ConfirmResetReq {
		ResetToken       string `json:"resetToken" validate:"required"`               // 从邮件中获取的重置令牌
		NewPassword      string `json:"newPassword" validate:"required,min=6,max=30"` // 新密码
	}
)

@server (
	prefix:  /api/v1
	timeout: 3s
)
service auth-api {
	// 获取验证码
	@handler GetCaptcha
	get /auth/captcha returns (BaseResponse)

	// 注册
	@handler Register
	post /auth/register (RegisterReq) returns (BaseResponse)

	// 登录
	@handler Login
	post /auth/login (LoginReq) returns (BaseResponse)

	// 登出
	@handler Logout
	post /auth/logout (LogoutReq) returns (BaseResponse)

	// 刷新令牌
	@handler Refresh
	post /auth/refresh (RefreshReq) returns (BaseResponse)

	// 重置密码
	@handler ResetPassword
	post /auth/password/reset (ResetPasswordReq) returns (BaseResponse)

	// 确认重置
	@handler ConfirmReset
	post /auth/password/reset/confirm (ConfirmResetReq) returns (BaseResponse)
}

type (
	// 验证令牌 (RFC 7662)
	VerifyReq {
		Token         string `form:"token" validate:"required"` // 需要验证的令牌
		TokenTypeHint string `form:"token_type_hint,optional"`  // 可选值：access 或 refresh
	}
	VerifyResp {
		Active    bool   `json:"active"`             // 是否有效
		Scope     string `json:"scope,optional"`     // 权限范围
		ClientID  string `json:"client_id,optional"` // 客户端ID
		UserID    string `json:"sub,optional"`       // Subject - 用户标识
		Username  string `json:"username,optional"`
		ExpiresAt int64  `json:"exp,optional"`       // 过期时间戳
	}

	JWK struct {
		Kty string `json:"kty"`          // 密钥类型，如 "RSA"、"EC"
		Use string `json:"use,optional"` // 用途，如 "sig" (签名)
		Kid string `json:"kid"`          // 密钥唯一ID
		Alg string `json:"alg,optional"` // 算法，如 "RS256"
		// RSA 公钥特有字段
		N   string `json:"n,optional"`
		E   string `json:"e,optional"`
		// EC 公钥特有字段...
		// ... 其他字段
	}

	// JWKS (RFC 7517)
	JWKSResp {
		Keys []JWK `json:"keys"` // 密钥数组
	}
)
service auth-api {
	// 令牌自省
	@handler Introspect
	post /oauth/introspect (VerifyReq) returns (VerifyResp)

	// 获取 JWKs
	@handler GetJWKs
	get /.well-known/jwks.json returns (JWKSResp)
}

type (
	// 获取用户信息
	UserProfileResp {
		UserID    string `json:"userId"`
		Username  string `json:"username"`
		Email     string `json:"email"`
		Phone     string `json:"phone,optional"`
		Nickname  string `json:"nickname,optional"`
		CreatedAt int64  `json:"createdAt"`
		UpdatedAt int64  `json:"updatedAt"`
	}

	// 修改密码
	ChangePasswordReq {
		OldPassword string `json:"oldPassword" validate:"required"`
		NewPassword string `json:"newPassword" validate:"required,min=6,max=30"`
	}
)

@server (
	jwt:        Auth
	prefix:     /api/v1
	timeout:    3s
	middleware: AuthInterceptor
)
service auth-api {
	// 获取用户信息
	@handler GetProfile
	get /auth/me returns (BaseResponse) 

	// 修改密码
	@handler ChangePassword
	put /auth/password/change (ChangePasswordReq) returns (BaseResponse)
}