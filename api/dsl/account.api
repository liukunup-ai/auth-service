syntax = "v1"

type (
	// 获取验证码
	CaptchaResp {
		CaptchaID    string `json:"captchaId"`
		CaptchaImage string `json:"captchaImage"` // base64 编码过的图片
		ExpiresIn    int64  `json:"expiresIn"`    // 验证码有效期（秒）
	}

	// 登录
	LoginReq {
		Username      string `json:"username" validate:"required"` // 用户名 (或 邮箱/手机号)
		Password      string `json:"password" validate:"required"` // 密码
		CaptchaID     string `json:"captchaId,optional"`           // 验证码ID (从获取验证码接口取得)
		CaptchaAnswer string `json:"captchaAnswer,optional"`       // 用户实际填写的验证码
	}
	LoginResp {
		UserID           string `json:"userId"`         // 对外返回 Public ID 作为用户标识
		Username         string `json:"username"`       // 用户名
		Email            string `json:"email,optional"` // 邮箱
		AccessToken      string `json:"accessToken"`      // 访问令牌
		AccessExpiresIn  int64  `json:"accessExpiresIn"`  // 访问令牌的有效期（秒）
		RefreshToken     string `json:"refreshToken"`     // 刷新令牌
		RefreshExpiresIn int64  `json:"refreshExpiresIn"` // 刷新令牌的有效期（秒）
		TokenType        string `json:"tokenType" default:"Bearer"` // 令牌类型
	}

	// 注册
	RegisterReq {
		Username      string `json:"username" validate:"required,min=3,max=20"`
		Password      string `json:"password" validate:"required,min=6,max=30"`
		Email         string `json:"email" validate:"required,email"`
		Phone         string `json:"phone,optional" validate:"omitempty,phone"`
		Nickname      string `json:"nickname,optional"`
		CaptchaID     string `json:"captchaId,optional"`
		CaptchaAnswer string `json:"captchaAnswer,optional"`
	}
	RegisterResp {
		UserID    string `json:"userId"`
		Username  string `json:"username"`
		Email     string `json:"email"`
		CreatedAt int64  `json:"createdAt"`
	}

	// 刷新令牌
	RefreshTokenReq {
		RefreshToken string `json:"refreshToken" validate:"required"`
	}
	RefreshTokenResp {
		AccessToken  string `json:"accessToken"`
		RefreshToken string `json:"refreshToken"`
		ExpiresIn    int64  `json:"expiresIn"`
	}

	// 验证令牌
	VerifyTokenReq {
		Token string `json:"token" validate:"required"`
	}
	VerifyTokenResp {
		IsValid   bool   `json:"isValid"`
		UserID    string `json:"userId,optional"`
		Username  string `json:"username,optional"`
		ExpiresAt int64  `json:"expiresAt,optional"`
		Message   string `json:"message,optional"`
	}

	// 重置密码
	ResetPasswordReq {
		Email         string `json:"email" validate:"required,email"`
		CaptchaID     string `json:"captchaId" validate:"required"`
		CaptchaAnswer string `json:"captchaAnswer" validate:"required"`
		NewPassword   string `json:"newPassword" validate:"required,min=6,max=30"`
	}
)

@server (
	prefix:  /v1
	timeout: 3s
)
service auth-api {
	// 获取验证码
	@handler GetCaptcha
	get /auth/captcha returns (CaptchaResp)

	// 登录
	@handler Login
	post /auth/login (LoginReq) returns (LoginResp)

	// 注册
	@handler Register
	post /auth/register (RegisterReq) returns (RegisterResp)

	// 刷新令牌
	@handler RefreshToken
	post /auth/refresh (RefreshTokenReq) returns (RefreshTokenResp)

	// 验证令牌
	@handler VerifyToken
	post /auth/verify (VerifyTokenReq) returns (VerifyTokenResp)

	// 重置密码
	@handler ResetPassword
	post /auth/password/reset (ResetPasswordReq) returns (BaseResponse)
}

type (
	// 登出请求
	LogoutReq {
		RefreshToken string `json:"refreshToken,optional"`
	}

	// 修改密码请求
	ChangePasswordReq {
		OldPassword string `json:"oldPassword" validate:"required"`
		NewPassword string `json:"newPassword" validate:"required,min=6,max=30"`
	}
)

@server (
	jwt:        Auth
	prefix:     /v1
	timeout:    3s
	middleware: AuthInterceptor
)
service auth-api {
	// 登出
	@handler Logout
	post /auth/logout (LogoutReq) returns (BaseResponse)

	// 修改密码
	@handler ChangePassword
	put /auth/password/change (ChangePasswordReq) returns (BaseResponse)
}