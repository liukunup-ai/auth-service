syntax = "v1"

info (
	title:   "认证服务"
	desc:    "提供认证授权、令牌管理等功能"
	author:  "我的代码温柔如风"
	email:   "liukunup@outlook.com"
	date:    "2025/09/03"
	version: "1.0"
)

// 通用响应体
type BaseResponse {
	Code    int64       `json:"code"`
	Message string      `json:"message"`
	Data    interface{} `json:"data,optional"`
}

service auth-api {
	// 健康检查
	@handler HealthCheck
	get /healthz returns (BaseResponse)
}

type (
	// 获取验证码响应
	CaptchaResp {
		CaptchaID    string `json:"captchaId"`
		CaptchaImage string `json:"captchaImage"` // base64 编码过的图片
		ExpiresIn    int64  `json:"expiresIn"` // 有效期（秒）
	}
	// 登录请求
	LoginReq {
		Username      string `json:"username" validate:"required"` // 用户名
		Password      string `json:"password" validate:"required"` // 密码
		CaptchaID     string `json:"captchaId,optional"`
		CaptchaAnswer string `json:"captchaAnswer,optional"` // 用户填写的验证码
	}
	// 登录响应
	LoginResp {
		UserID       string `json:"userId"`
		Username     string `json:"username"`
		Email        string `json:"email,optional"`
		Avatar       string `json:"avatar,optional"`
		AccessToken  string `json:"accessToken"`
		RefreshToken string `json:"refreshToken"`
		ExpiresIn    int64  `json:"expiresIn"` // 有效期（秒）
		TokenType    string `json:"tokenType" default:"Bearer"` // 令牌类型
	}
	// 注册请求
	RegisterReq {
		Username      string `json:"username" validate:"required,min=3,max=20"`
		Password      string `json:"password" validate:"required,min=6,max=30"`
		Email         string `json:"email" validate:"required,email"`
		Phone         string `json:"phone,optional" validate:"omitempty,phone"`
		Nickname      string `json:"nickname,optional"`
		CaptchaID     string `json:"captchaId,optional"`
		CaptchaAnswer string `json:"captchaAnswer,optional"`
	}
	// 注册响应
	RegisterResp {
		UserID    string `json:"userId"`
		Username  string `json:"username"`
		Email     string `json:"email"`
		CreatedAt int64  `json:"createdAt"`
	}
	// 刷新令牌请求
	RefreshTokenReq {
		RefreshToken string `json:"refreshToken" validate:"required"`
	}
	// 刷新令牌响应
	RefreshTokenResp {
		AccessToken  string `json:"accessToken"`
		RefreshToken string `json:"refreshToken"`
		ExpiresIn    int64  `json:"expiresIn"`
	}
	// 验证令牌请求
	VerifyTokenReq {
		Token string `json:"token" validate:"required"`
	}
	// 验证令牌响应
	VerifyTokenResp {
		IsValid   bool   `json:"isValid"`
		UserID    string `json:"userId,optional"`
		Username  string `json:"username,optional"`
		ExpiresAt int64  `json:"expiresAt,optional"`
		Message   string `json:"message,optional"`
	}
	// 重置密码请求
	ResetPasswordReq {
		Email         string `json:"email" validate:"required,email"`
		CaptchaID     string `json:"captchaId" validate:"required"`
		CaptchaAnswer string `json:"captchaAnswer" validate:"required"`
		NewPassword   string `json:"newPassword" validate:"required,min=6,max=30"`
	}
)

@server (
	prefix:  /v1
	timeout: 3s
)
service auth-api {
	// 获取验证码
	@handler GetCaptcha
	get /auth/captcha returns (CaptchaResp)

	// 登录
	@handler Login
	post /auth/login (LoginReq) returns (LoginResp)

	// 注册
	@handler Register
	post /auth/register (RegisterReq) returns (RegisterResp)

	// 刷新令牌
	@handler RefreshToken
	post /auth/refresh (RefreshTokenReq) returns (RefreshTokenResp)

	// 验证令牌
	@handler VerifyToken
	post /auth/verify (VerifyTokenReq) returns (VerifyTokenResp)

	// 重置密码
	@handler ResetPassword
	post /auth/password/reset (ResetPasswordReq) returns (BaseResponse)
}

type (
	// 登出请求
	LogoutReq {
		RefreshToken string `json:"refreshToken,optional"`
	}
	// 修改密码请求
	ChangePasswordReq {
		OldPassword string `json:"oldPassword" validate:"required"`
		NewPassword string `json:"newPassword" validate:"required,min=6,max=30"`
	}
	// 权限验证请求
	CheckPermissionReq {
		UserID   string `json:"userId" validate:"required"`
		Resource string `json:"resource" validate:"required"`
		Action   string `json:"action" validate:"required"` // read, write, delete等
	}
	// 权限验证响应
	CheckPermissionResp {
		HasPermission bool   `json:"hasPermission"`
		Message       string `json:"message,optional"`
	}
)

@server (
	jwt:        Auth
	prefix:     /v1
	timeout:    3s
	middleware: AuthInterceptor
)
service auth-api {
	// 登出
	@handler Logout
	post /auth/logout (LogoutReq) returns (BaseResponse)

	// 修改密码
	@handler ChangePassword
	put /auth/password/change (ChangePasswordReq) returns (BaseResponse)

	// 检查权限
	@handler CheckPermission
	post /auth/permission/check (CheckPermissionReq) returns (CheckPermissionResp)
}

